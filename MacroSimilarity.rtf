{\rtf1\ansi\ansicpg1252\cocoartf2822
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab560
\pard\pardeftab560\slleading20\pardirnatural\partightenfactor0

\f0\fs26 \cf0 Sub CALCULsimilarity()\
       \
        Dim normeV1 As Double\
        Dim normeV2 As Double\
        Dim ecartdistanceV1V2 As Double\
        Dim Costeta As Double\
        Dim V1() As Double\
        Dim V2() As Double\
        Dim Vmax() As Double\
   Dim maxvalue As Double\
   Dim i As Integer\
   Dim j As Integer\
   Dim t As Integer\
   Dim found1 As Boolean\
   Dim found2 As Boolean\
   \
  ' On Error Resume Next\
   \
   ' calcul avec normalisation des vecteurs\
   \
 \
Dim Ws1 As Worksheet\
 \
Set Ws1 = Sheet1\
 Ws1.Range("G2").ClearContents\
\
 \
ReDim V1(24)\
ReDim V2(24)\
\
ReDim V1Formation(1)\
ReDim V2Formation(1)\
\
ReDim Vmax(24)\
found1 = False\
found2 = False\
For j = 2 To 26\
     V1(j - 2) = (Ws1.Range("C" & j) / Ws1.Range("E" & j))\
     V2(j - 2) = (Ws1.Range("D" & j) / Ws1.Range("E" & j))\
     \
     If j = 2 Or j = 3 Then\
    \
     V1Formation(j - 2) = (Ws1.Range("C" & j) / Ws1.Range("E" & j))\
     V2Formation(j - 2) = (Ws1.Range("D" & j) / Ws1.Range("E" & j))\
     \
     End If\
     \
     \
 Next j\
 \
        Dim ProduitscalaireV1V2 As Double\
        normeV1 = 0\
        normeV2 = 0\
        ProduitscalaireV1V2 = 0\
        For i = 0 To UBound(V1, 1)\
            normeV1 = normeV1 + V1(i) ^ 2\
            normeV2 = normeV2 + V2(i) ^ 2\
            ProduitscalaireV1V2 = ProduitscalaireV1V2 + V1(i) * V2(i)\
        Next i\
        normeV1 = Sqr(normeV1)\
        normeV2 = Sqr(normeV2)\
        Costeta = ProduitscalaireV1V2 / (normeV1 * normeV2)\
        \
        ' similarity r\'c8ponse\
         Ws1.Range("G" & 2) = Costeta\
       \
       'Formation\
         normeV1 = 0\
        normeV2 = 0\
        ProduitscalaireV1V2 = 0\
        For i = 0 To UBound(V1Formation, 1)\
            normeV1 = normeV1 + V1Formation(i) ^ 2\
            normeV2 = normeV2 + V2Formation(i) ^ 2\
            ProduitscalaireV1V2 = ProduitscalaireV1V2 + V1Formation(i) * V2Formation(i)\
        Next i\
        normeV1 = Sqr(normeV1)\
        normeV2 = Sqr(normeV2)\
        Costeta = ProduitscalaireV1V2 / (normeV1 * normeV2)\
       \
        ' similarity r\'c8ponse formation\
         Ws1.Range("G" & 6) = Costeta\
   Drawline_Example\
End Sub\
\
\
Public Sub Drawline_Example()\
 \
Dim i As Integer\
Dim j As Integer\
\
Dim leftRect As Double\
Dim TopRect As Double\
Dim widthRect As Double\
Dim HeightRect As Double\
\
\
\
For i = Sheet1.Shapes.Count To 1 Step -1\
Sheet1.Shapes(i).Delete\
Next i\
\
leftRect = 350\
TopRect = 150\
widthRect = 250\
HeightRect = 200\
\
Sheet1.Shapes.AddShape msoShapeRectangle, leftRect, TopRect, widthRect, HeightRect\
 \
With Sheet1.Shapes\
  Sheet1.Shapes(1).Fill.Solid\
  Sheet1.Shapes(1).Fill.BackColor.RGB = RGB(250, 250, 250)\
  Sheet1.Shapes(1).Fill.ForeColor.RGB = RGB(250, 250, 250)\
End With\
\
 With Sheet1.Shapes.AddLabel(msoTextOrientationHorizontal, leftRect, TopRect + ((HeightRect - 40) / 2), 20, 40)\
  .TextFrame.Characters.Text = "A-1.2"\
  '.TextFrame.Characters.Font.Color = RGB(250, 0, 128)\
    .SoftEdge.Type = msoSoftEdgeType2\
   .TextFrame.Characters.Font.Bold = True\
    .TextFrame.HorizontalAlignment = xlHAlignCenter\
    .TextFrame.VerticalAlignment = xlVAlignCenter\
      \
   .TextFrame.Orientation = msoTextOrientationUpward\
  .Fill.Transparency = 0.99\
End With\
\
 With Sheet1.Shapes.AddLabel(msoTextOrientationHorizontal, leftRect + (widthRect - 40) / 2, TopRect + HeightRect - 20, 40, 20)\
  .TextFrame.Characters.Text = "A-1.1"\
  '.TextFrame.Characters.Font.Color = RGB(250, 0, 128)\
    .SoftEdge.Type = msoSoftEdgeType2\
   .TextFrame.Characters.Font.Bold = True\
  ' .TextFrame.Orientation = msoTextOrientationUpward\
  .TextFrame.HorizontalAlignment = xlHAlignCenter\
    .TextFrame.VerticalAlignment = xlVAlignCenter\
  .Fill.Transparency = 0.99\
End With\
\
\
Dim Fact1 As Double\
Dim Fact2 As Double\
Dim x1 As Double\
Dim y1 As Double\
\
Fact1 = 30\
Fact2 = 30\
\
 x1 = Sheet1.Range("C2").Value * Fact1\
 y1 = Sheet1.Range("C3").Value * Fact1\
 'V1 formation\
 With Sheet1.Shapes.AddLine(leftRect, TopRect + HeightRect, leftRect + x1, (TopRect + HeightRect) - y1).Line\
 .DashStyle = msoLineSolid 'msoLineDashDotDot\
 .Weight = 3\
 .ForeColor.RGB = RGB(250, 0, 128)\
 .EndArrowheadStyle = msoArrowheadTriangle\
  \
End With\
\
 With Sheet1.Shapes.AddLabel(msoTextOrientationHorizontal, leftRect + x1 - 50, (TopRect + HeightRect) - y1 - 20, 50, 20)\
  .TextFrame.Characters.Text = "Poste 1"\
  .TextFrame.Characters.Font.Color = RGB(250, 0, 128)\
   .SoftEdge.Type = msoSoftEdgeType2\
   .TextFrame.Characters.Font.Bold = True\
  .Fill.Transparency = 0.99\
End With\
\
\
Dim x2 As Double\
Dim y2 As Double\
\
 x2 = Sheet1.Range("D2").Value * Fact2\
 y2 = Sheet1.Range("D3").Value * Fact2\
'V2 formation\
\
\
 With Sheet1.Shapes.AddLine(leftRect, TopRect + HeightRect, leftRect + x2, (TopRect + HeightRect) - y2).Line  ' TopRect + y2\
 .DashStyle = msoLineSolid 'msoLineDashDotDot\
 .Weight = 3\
 .ForeColor.RGB = RGB(0, 112, 192)\
 .EndArrowheadStyle = msoArrowheadTriangle\
End With\
 \
  With Sheet1.Shapes.AddLabel(msoTextOrientationHorizontal, leftRect + x2, (TopRect + HeightRect) - y2, 50, 20)\
  .TextFrame.Characters.Text = "Poste 2"\
    .TextFrame.Characters.Font.Color = RGB(0, 112, 192)\
  .TextFrame.Characters.Font.Bold = True\
  .SoftEdge.Type = msoSoftEdgeType2\
  .Fill.Transparency = 0.99\
End With\
\
'With Sheet1.Shapes.AddShape(msoShapeArc, leftRect + x1 / 2, TopRect + HeightRect - y1, 50, 20).Line\
' .DashStyle = msoLineSolid 'msoLineDashDotDot\
' .Weight = 3\
'\
'End With\
\
\
End Sub\
Sub DrawCoordinates()\
   Dim multiplier    As Single\
   Dim x_offset      As Single\
   Dim y_offset      As Single\
   Dim x_position    As Single\
   Dim y_position    As Single\
   \
   multiplier = 10\
   x_offset = 150\
   y_offset = 80\
   \
   x_position = Range("L2").Value * multiplier + x_offset\
   y_position = -Range("M2").Value * multiplier + y_offset\
   \
   With Sheet1.Shapes.BuildFreeform(msoEditingAuto, x_position, y_position)\
      For idx = 3 To Range("L2").End(xlDown).Row\
         x_position = Range("L" & idx).Value * multiplier + x_offset\
         y_position = -Range("M" & idx).Value * multiplier + y_offset\
         \
         .AddNodes msoSegmentLine, msoEditingAuto, x_position, y_position\
      Next\
      .ConvertToShape.Select\
   End With\
End Sub\
}